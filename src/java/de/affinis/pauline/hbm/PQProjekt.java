package de.affinis.pauline.hbm;
// Generated 17.07.2013 21:19:08 by Hibernate Tools 3.2.1.GA

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Set;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.SessionScoped;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

/**
 * PQProjekt generated by hbm2java
 */
@ManagedBean
@SessionScoped
@Entity
@Table(name = "p_q_projekt", catalog = "paulprod")
public class PQProjekt implements java.io.Serializable {

    private Integer hid;
    private HAuftrag HAuftrag;
    private PUseraccount PUseraccountByCreatedby;
    private PUseraccount PUseraccountByModifiedby;
    private String beschreibung;
    private Date createdat;
    private Date modifiedat;
    private BigDecimal QKeyFigure;
    private BigDecimal QExtKeyFigure;
    private String hinweis;
    private Set<PQObjekt> PQObjekts = new HashSet<PQObjekt>(0);
    
    private List<PQObjekt> ObjektList = new LinkedList<PQObjekt>();

    @Transient
    public List<PQObjekt> getObjektList() {
        List<PQObjekt> objekts = new LinkedList<PQObjekt>();
        if (this.PQObjekts == null) {
            return objekts;
        } else {
            for (PQObjekt o : this.PQObjekts) {
                objekts.add(o);
            }
        }
        return objekts;
    }

    public void setObjektList(List<PQObjekt> ObjektList) {
        this.ObjektList = ObjektList;
    }

    public PQProjekt() {
    }

    public PQProjekt(HAuftrag HAuftrag, PUseraccount PUseraccountByCreatedby, PUseraccount PUseraccountByModifiedby) {
        this.HAuftrag = HAuftrag;
        this.PUseraccountByCreatedby = PUseraccountByCreatedby;
        this.PUseraccountByModifiedby = PUseraccountByModifiedby;
    }

    public PQProjekt(HAuftrag HAuftrag, PUseraccount PUseraccountByCreatedby, PUseraccount PUseraccountByModifiedby, String beschreibung, Date createdat, Date modifiedat, BigDecimal QKeyFigure, BigDecimal QExtKeyFigure, String hinweis, Set<PQObjekt> PQObjekts) {
        this.HAuftrag = HAuftrag;
        this.PUseraccountByCreatedby = PUseraccountByCreatedby;
        this.PUseraccountByModifiedby = PUseraccountByModifiedby;
        this.beschreibung = beschreibung;
        this.createdat = createdat;
        this.modifiedat = modifiedat;
        this.QKeyFigure = QKeyFigure;
        this.QExtKeyFigure = QExtKeyFigure;
        this.hinweis = hinweis;
        this.PQObjekts = PQObjekts;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "hid", unique = true, nullable = false)
    public Integer getHid() {
        return this.hid;
    }

    public void setHid(Integer hid) {
        this.hid = hid;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "auftrag", nullable = false)
    public HAuftrag getHAuftrag() {
        return this.HAuftrag;
    }

    public void setHAuftrag(HAuftrag HAuftrag) {
        this.HAuftrag = HAuftrag;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "createdby", nullable = false)
    public PUseraccount getPUseraccountByCreatedby() {
        return this.PUseraccountByCreatedby;
    }

    public void setPUseraccountByCreatedby(PUseraccount PUseraccountByCreatedby) {
        this.PUseraccountByCreatedby = PUseraccountByCreatedby;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "modifiedby", nullable = false)
    public PUseraccount getPUseraccountByModifiedby() {
        return this.PUseraccountByModifiedby;
    }

    public void setPUseraccountByModifiedby(PUseraccount PUseraccountByModifiedby) {
        this.PUseraccountByModifiedby = PUseraccountByModifiedby;
    }

    @Column(name = "beschreibung")
    public String getBeschreibung() {
        return this.beschreibung;
    }

    public void setBeschreibung(String beschreibung) {
        this.beschreibung = beschreibung;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "createdat", length = 19)
    public Date getCreatedat() {
        return this.createdat;
    }

    public void setCreatedat(Date createdat) {
        this.createdat = createdat;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "modifiedat", length = 19)
    public Date getModifiedat() {
        return this.modifiedat;
    }

    public void setModifiedat(Date modifiedat) {
        this.modifiedat = modifiedat;
    }

    @Column(name = "q_key_figure")
    public BigDecimal getQKeyFigure() {
        return this.QKeyFigure;
    }

    public void setQKeyFigure(BigDecimal QKeyFigure) {
        this.QKeyFigure = QKeyFigure;
    }

    @Column(name = "q_ext_key_figure")
    public BigDecimal getQExtKeyFigure() {
        return this.QExtKeyFigure;
    }

    public void setQExtKeyFigure(BigDecimal QExtKeyFigure) {
        this.QExtKeyFigure = QExtKeyFigure;
    }

    @Column(name = "hinweis", length = 65535)
    public String getHinweis() {
        return this.hinweis;
    }

    public void setHinweis(String hinweis) {
        this.hinweis = hinweis;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER, mappedBy = "PQProjekt")
    public Set<PQObjekt> getPQObjekts() {
        return this.PQObjekts;
    }

    public void setPQObjekts(Set<PQObjekt> PQObjekts) {
        this.PQObjekts = PQObjekts;
    }
}
